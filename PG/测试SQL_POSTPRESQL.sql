/*没有指定行*/update a set id = 1;
/*删除所有行*/DELETE FROM table_name;
update a set id = 1 where id = 1;
DELETE FROM table_name where id = 1;
DROP INDEX index_name;
select id from a where id in(1,2,3,4);
select id from a where id in(1,2,3);
select name from a where id like '%1';
select * from (select * from t where aa LIKE '%ww%' and bb like '%q') a where id like '%s%' and qw = 1;
select name from a where id like '1%';
select * from (select * from t where id = 1 or id = 2 or id = 3) where id = 1 or id = 2 or id = 3;
select * from (select * from t where id = 1 or id = 2 ) where id = 1 or id = 2;
select id from a;
/*嵌套查询*/select id from (select id from a where id = 1)t;
select id from a where id =1;
/*嵌套查询*/select id from (select id from a where id = 1)t where t.id = 1;
select * from a;
select t1.a, (select t2.* from t2) from t1;
select id from a;
select id from a where id <> 1;
select id from a where id NOT IN (1);
select id from a where id NOT LIKE 1;
select a.id from a where not exists (select 1 from b where b.id= '1' );
select id from a where id = 1;
select 1 from a left join b on a.id = b.name left join c on a.id = c.age left join d on a.id=d.id;
select 1 from a,b,c,d where a.id = b.id and a.id = c.id;
select 1 from a left join b on a.id = b.name;
select 1 from a,b where a.id = b.id;
select  id from a where id=(select 1 from a) ;
select  id from a where id=1;
select * from a where id < 10 union select * from b where id <10 ;
select t from t union select t from t1 union all select t from tt;
select * from a where id < 10 union all select * from b where id <10 ;
select t from t union all select t from tt;
insert into a values(1);
insert into a(id) values(1);
select distinct id from a;
select id from a;
/*修改列属性*/alter table T3 alter column ID set data type clob;
/*修改列名*/alter table T1 rename column ID to ID2;
alter table test1 drop column id;
create table mytab(id int not null , name char(10));
create table mytab(id int not null , name char(10),PRIMARY KEY (id) );
create table mytab(id int not null PRIMARY KEY, name char(10));
CREATE TABLE Persons (Id_P INT NOT NULL,LastName VARCHAR (255) NOT NULL,FirstName VARCHAR (255),Address VARCHAR (255),City VARCHAR (255),CONSTRAINT pk_PersonID PRIMARY KEY (Id_P,LastName));
alter table stu drop column id;
alter table test1 drop column id;
/*建表*/create table table_name("where" int);
/*修改字段名*/alter table table_name rename column column1 to "where" ;
/*添加字段*/alter table members add "where" int;
/*建表*/create table table_name("ID" int);
/*修改字段名*/alter table table_name rename column column1 to "ID" ;
/*添加字段*/alter table members add "ID" int;
create table table1("table" int);
create table table_name("delete" int);
create table table_name("update" int);
create table table_name("select" int);
create table table_name("where" int);
create table table_name("in" int);
create table table_name("like" int);
create table table_name("order" int);
create table table_name("having" int);
create table table_name("set" int);
create table table_name("distinct" int);
create table table_name("between" int);
create table table_name("insert" int);
create table table_name("into" int);
create table table_name("and" int);
create table table_name("all" int);
create table table_name("group" int);
create table table1(table123 int);
create index i on a(id1,id2,id3, id4, id5, id6);
create index i on a(id1,id2,id3,id4,id5);
create index i on a(id1,id2,id3, id4, id5, id6);
create index IDX_a on a(id,id,id);
create table temp( id int, name char(20), foreign key(id) references outTable(id)  );
create table temp( id int, name char(20), CONSTRAINT fff foreign key(id) references outTable(id)  );
create table temp( id int, name char(20));
create table mytab (id int, constraint PK_tab primary key (id)) ;
select id from a where 1+age>2;
select 1 from a where 2 > age -1;
select 1 from a where age = 2 and  2 > age -1;
select id from a where 1>0;
select 1 from a where age = 2;
select count(id) from stu;
select count(1) from stu;
select count(*) from stu;
select * from a,a,a;
select * from a a  left join a b on a.name = b.name left join a c on a.name = c.name;
select * from a,a;
select * from a a  left join a c on a.name = c.name;
truncate table a;
drop table a;
create table "table"(id int);
create table "delete"(id int);
create table "update"(id int);
create table "select"(id int);
create table "where"(id int);
create table "in"(id int);
create table "like"(id int);
create table "order"(id int);
create table "having"(id int);
create table "set"(id int);
create table "distinct"(id int);
create table "between"(id int);
create table "insert"(id int);
create table "into"(id int);
create table "and"(id int);
create table "all"(id int);
create table "group"(id int);
create table table1(id int);
select id from a for update;
select id from a;
/*纯数字*/create table "111"( id int );
/*特殊字符*/create table "table#"( id int );
/*数字开头*/create table "1tab"( id int );
/*下划线开头*/create table "_tab"( id int );
/*带数字*/create table table1( id int );
/*带下划线*/create table table_one( id int );
create table temp( id int, name char(20), CONSTRAINT fff foreign key(id) references outTable(id)  );
create table temp( id int, name char(20), CONSTRAINT FK_PerOrders foreign key(id) references outTable(id)  );
CREATE TRIGGER aaaa BEFORE INSERT ON test_trigger_src_tbl FOR EACH ROW EXECUTE PROCEDURE tri_insert_func ();
CREATE TRIGGER tri_aaaa BEFORE INSERT ON test_trigger_src_tbl FOR EACH ROW EXECUTE PROCEDURE tri_insert_func ();
select coalesce(null,2,3) from stu;
select * from stu;
select * from a where 1 = 1;
select * from t1 where a = a;
select * from a where ID = 1;
SELECT stuNo,results FROM score WHERE results>(SELECT AVG(results) FROM score);
SELECT stuNo,results,(SELECT AVG(results) FROM score) AS A FROM score;
SELECT stuNo,results FROM score WHERE results BETWEEN (SELECT AVG(results) FROM score WHERE results<=60) AND (SELECT AVG(results) FROM score WHERE results>=80);
select * from a where age = (select aa from tt);
select * from a where age = (18,19);
select * from stu where substr(name,1,5)='candy';
select * from stu where LENGTH(name)=5;
select * from stu where name='candy';
create table mytab (id int, constraint ppp primary key (id)) ;
create table mytab (id int, constraint PK_tab primary key (id)) ;
select * from stu where age < (select min(age) from stu2 where age < (select min(age) from stu3 where age < (select min(age) from stu4 where age < (select min(age) from stu5 ))));
select * from stu where age < (select min(age) from stu2 where age < (select min(age) from stu3 where age < (select min(age) from stu4 )));
select * from stu order by name;
select * from stu;
update B set B.ysxmh = A.newysxmh from A,B where A.oldysxmh = B.ysxmh;
update a set a.KSMC = b.name from JC_KSXXB a inner join zd_unit_code b on a.KSDM = b.code;
DELETE FROM student s USING classroom c WHERE s.cid = c.id AND s.sid = 1;
DELETE FROM Person p WHERE p.LastName = 'Wilson';
UPDATE Person p SET p.FirstName = 'Fred' WHERE p.LastName = 'Wilson';
select a from tb where a in(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
select a from tb where a in(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
create sequence user_camera_version increment by 1 minvalue 1 no maxvalue start with 1;
create sequence seq_user_camera_version increment by 1 minvalue 1 no maxvalue start with 1;
create table mytab(id int not null , name TEXT);
alter table members alter column  name type int using TEXT;
alter table members add name TEXT;
create table mytab(id int not null);
alter table members alter column name type TEXT using int;
alter table members add id int;
create table mytab(id int not null , name BYTEA);
alter table members alter column  name type int using BYTEA;
alter table members add name BYTEA;
INSERT INTO table1 select * FROM table2;