/*笛卡尔积*/select 1 from a,b,c,d;
/*等值连接*/select 1 from a,b,c,d where a.id = b.id and a.id = c.id and a.id = d.id;
/*inner join*/select 1 from table1 a inner join table2 b on a.id = b.id inner join table3 c on a.age = c.age inner join table4 d on a.age = d.age;
/*left join*/select 1 from table1 a left join table2 b on a.id = b.id left join table3 c on a.age = c.age left join table4 d on a.age = d.age;
/*left join*/select 1 from table1 a left outer join table2 b on a.id = b.id left join table3 c on a.age = c.age left join table4 d on a.age = d.age;
/*rigth join*/select 1 from table1 a right join table2 b on a.id = b.id right join table3 c on a.age = c.age right join table4 d on a.age = d.age;
/*rigth join*/select 1 from table1 a right outer join table2 b on a.id = b.id right join table3 c on a.age = c.age right join table4 d on a.age = d.age;
/*cross join*/select 1 from table1 a cross join table2 b cross join table3 c cross join table4 d;
/*join*/select 1 from table1 a join table2 b on a.id = b.id inner join table3 c on a.age = c.age inner join table4 d on a.age = d.age;
/*mysql using用法*/select 1 from table1 a join table2 b using(id) join table3 using(age)  join table4 using(sex);
/*笛卡尔积*/select 1 from a,b,c;
/*等值连接*/select 1 from a,b,c where a.id = b.id and a.id = c.id;
/*inner join*/select 1 from table1 a inner join table2 b on a.id = b.id inner join table3 c on a.age = c.age;
/*inner join*/select 1 from table1  a inner join table2  b on a.id = b.id inner join table3  c on a.age = c.age;
/*left join*/select 1 from table1 a left join table2 b on a.id = b.id left join table3 c on a.age = c.age;
/*left join*/select 1 from table1 a left outer join table2 b on a.id = b.id left join table3 c on a.age = c.age;
/*rigth join*/select 1 from table1 a right join table2 b on a.id = b.id right join table3 c on a.age = c.age;
/*rigth join*/select 1 from table1 a right outer join table2 b on a.id = b.id right join table3 c on a.age = c.age;
/*cross join*/select 1 from table1 a cross join table2 b cross join table3 c;
/*join*/select 1 from table1 a join table2 b on a.id = b.id inner join table3 c on a.age = c.age;
/*mysql using用法*/select 1 from table1 a join table2 b using(id) join table3 using(age);
/*等值连接*/select 1 from table1,table2;
/*等值连接*/select 1 from table1 a,table2 b where a.id = b.id and a.name = b.name and a.id=1;
/*等值连接*/select 1 from table1 a,table2 b where a.id = b.id and a.name = b.name;
/*等值连接*/select 1 from table1 a,table2 b where a.id = b.id and a.name = b.name and a.id=1;
/*inner join*/select 1 from table1 a inner join table2 b where a.id = b.id and a.name = b.name and a.id=1;
/*inner join*/select 1 from table1 a inner join table2 b on a.id = b.id and a.name = b.name and a.id=1;
/*inner join*/select 1 from table1 a inner join table2 b on a.id = b.id and a.name = b.name where a.id=1;
/*inner join*/select 1 from table1 a inner join table2 b on (a.id = b.id and a.name = b.name) where a.id=1;
/*inner join*/select 1 from table1 as a inner join table2 as b on a.id = b.id and a.name = b.name where a.id=1;
/*join 等同于 inner join*/select 1 from table1 a join table2 b on a.id = b.id and a.name = b.name where a.id=1;
/*left join*/select 1 from table1 a left join table2 b on a.id = b.id and a.name = b.name where a.id=1;
/*left join*/select 1 from table1 a left outer join table2 b on a.id = b.id and a.name = b.name where a.id=1;
/*rigth join*/select 1 from table1 a right outer join table2 b on a.id = b.id and a.name = b.name where a.id=1;
/*rigth join*/select 1 from table1 a right join table2 b on a.id = b.id and a.name = b.name where a.id=1;
/*cross join*/select 1 from table1 a cross join table2 b on a.id = b.id and a.name = b.name where a.id=1;
/*mysql using 语法*/select 1 from table1 a join table2 b using(id);
select * from a;
select t1.a, (select t2.* from t2) from t1;
select id from a;
/*inner join*/select id from a inner join b;
/*inner join*/select 1 from table1 as a inner join table2 as b;
/*cross join*/select 1 from table1 a cross join table2 b;
/*join*/select 1 from table1 a join table2 b;
/*等值连接*/select 1 from a,b where a.id=b.id;
/*inner join*/select 1 from table1 a inner join table2 b on a.id = b.id and a.name = b.name and a.id=1;
/*inner join*/select 1 from table1 a inner join table2 b on a.id = b.id and a.name = b.name where a.id=1;
/*inner join*/select 1 from table1 a inner join table2 b on (a.id = b.id and a.name = b.name) where a.id=1;
/*inner join*/select 1 from table1 as a inner join table2 as b on a.id = b.id and a.name = b.name where a.id=1;
/*join 等同于 inner join*/select 1 from table1 a join table2 b on a.id = b.id and a.name = b.name where a.id=1;
/*left join*/select 1 from table1 a left join table2 b on a.id = b.id and a.name = b.name where a.id=1;
/*left join*/select 1 from table1 a left outer join table2 b on a.id = b.id and a.name = b.name where a.id=1;
/*cross join*/select 1 from table1 a cross join table2 b on a.id = b.id and a.name = b.name where a.id=1;
/*rigth join*/select 1 from table1 a right outer join table2 b on a.id = b.id and a.name = b.name where a.id=1;
/*rigth join*/select 1 from table1 a right join table2 b on a.id = b.id and a.name = b.name where a.id=1;
/*没有指定行*/update a set id = 1;
/*删除所有行*/DELETE FROM table_name;
update a set id = 1 where id = 1;
DELETE FROM table_name where id = 1;
select name from a where id like '%1';
select * from (select * from t where aa LIKE '%ww%' and bb like '%q') a where id like '%s%' and qw = 1;
select name from a where id like '1%';
select id from a where id =1 or id = 2 or id = 3 or id=4 or id=5;
select id from a where id =1 or id = 2 or id = 3 or id=4;
select * from (select * from t where id = 1 or id = 2 or id = 3) a where id = 1 or id = 2 or id = 3;
select * from (select * from t where id = 1 or id = 2 ) a where id = 1 or id = 2;
select id from a;
/*嵌套查询*/select id from (select id from a where id = 1)t;
select id from a where id =1;
/*嵌套查询*/select id from (select id from a where id = 1)t where t.id = 1;
select id from a where id <> 1;
select id from a where id NOT IN (1);
select id from a where id NOT LIKE 1;
select a.id from a where not exists (select 1 from b where b.id= '1' );
select id from a where id = 1;
select id from a where id in(1,2,3,4);
select id from a where id in(1,2,3);
select  id from a where id=(select 1 from a) ;
select  id from a where id=1;
select * from a where id < 10 union select * from b where id <10 ;
select t from t union select t from t1 union all select t from tt;
select * from a where id < 10 union all select * from b where id <10 ;
select t from t union all select t from tt;
select * from stu where age < (select min(age) from stu2 where age < (select min(age) from stu3 where age < (select min(age) from stu4 where age < (select min(age) from stu5 ))));
select * from stu where age < (select min(age) from stu2 where age < (select min(age) from stu3 where age < (select min(age) from stu4 )));
insert into a values(1);
insert into a(id) values(1);
select distinct id from a;
select id from a;
select id from a where 1+age>2;
select 1 from a where 2 > age -1;
select 1 from a where age = 2 and  2 > age -1;
select id from a where 1>0;
select 1 from a where age = 2;
create table mytab(id int not null , name char(10));
create table mytab(id int not null , name char(10),PRIMARY KEY (id) );
create table mytab(id int not null PRIMARY KEY, name char(10));
CREATE TABLE Persons (Id_P INT NOT NULL,LastName VARCHAR (255) NOT NULL,FirstName VARCHAR (255),Address VARCHAR (255),City VARCHAR (255),CONSTRAINT pk_PersonID PRIMARY KEY (Id_P,LastName));
/*修改列属性*/alter table t_book modify name varchar(22);
/*修改列名*/alter table student change column sname stuname varchar(20);
alter table stu drop column id;
alter table test1 drop column id;
drop table a;
create table `table`(id int);
create table `delete`(id int);
create table `update`(id int);
create table `select`(id int);
create table `where`(id int);
create table `in`(id int);
create table `like`(id int);
create table `order`(id int);
create table `having`(id int);
create table `set`(id int);
create table `distinct`(id int);
create table `between`(id int);
create table `insert`(id int);
create table `into`(id int);
create table `and`(id int);
create table `all`(id int);
create table `group`(id int);
create table table1(id int);
/*建表*/create table table_name(`where` int);
/*修改字段名*/alter table table_name change column1 `where` int;
/*添加字段*/alter table members add `where` int;
/*建表*/create table table_name(`ID` int);
/*修改字段名*/alter table table_name change column1 `ID` int;
/*添加字段*/alter table members add `ID` int;
create table table_name(`table` int);
create table table_name(`delete` int);
create table table_name(`update` int);
create table table_name(`select` int);
create table table_name(`where` int);
create table table_name(`in` int);
create table table_name(`like` int);
create table table_name(`order` int);
create table table_name(`having` int);
create table table_name(`set` int);
create table table_name(`distinct` int);
create table table_name(`between` int);
create table table_name(`insert` int);
create table table_name(`into` int);
create table table_name(`and` int);
create table table_name(`all` int);
create table table_name(`group` int);
create table table1(table123 int);
create index i on a(id1,id2,id3, id4, id5, id6);
/*创建 表语句中创建索引*/CREATE TABLE t_dept (a INT NOT NULL PRIMARY KEY,b VARCHAR (20) NULL,c VARCHAR (2) NULL,d VARCHAR (20) NULL,e VARCHAR (20) NULL,f VARCHAR (20) NULL,INDEX index_no (a,b,c,d,e,f));
/*修改表时创建索引*/alter table table_test add index index_test1 (a,b,c,d,e,f);
create index i on a(id1,id2,id3,id4,id5);
/*创建 表语句中创建索引*/CREATE TABLE t_dept (a INT NOT NULL PRIMARY KEY,b VARCHAR (20) NULL,c VARCHAR (2) NULL,d VARCHAR (20) NULL,e VARCHAR (20) NULL,f VARCHAR (20) NULL,INDEX index_no (a,b,c,d,e));
/*修改表时创建索引*/alter table table_test add index index_test1 (a,b,c,d,e);
create index i on a(id1,id2,id3, id4, id5, id6);
create index IDX_a on a(id,id,id);
DROP INDEX a ON table1;
select id from a for update;
select id from a;
select count(id) from stu;
select count(1) from stu;
select count(*) from stu;
create table mytab(id int not null , name Blob);
create table mytab(id int not null , age int);
alter table mytab add name Blob;
alter table mytab add name int;
create table mytab(id int not null , name Blob);
create table mytab(id int not null , name Blob) engine=innodb;
create table ss(id int  not null auto_increment, user_name varchar(15) not null auto_increment);
create table ss(id int  not null auto_increment, user_name varchar(15) not null );
truncate table a;
delete from stu limit 1;
UPDATE stu set id=1 limit 1;
delete from stu ;
UPDATE stu set id=1;
delete from stu order by id;
UPDATE stu set id=1 order by id;
delete from stu ;
UPDATE stu set id=1;
create table temp( id int, name char(20), foreign key(id) references outTable(id)  );
create table temp( id int, name char(20), CONSTRAINT fff foreign key(id) references outTable(id)  );
create table temp( id int, name char(20));
create table mytab (id int, constraint PK_tab primary key (id)) ;
select * from stu where mid("name",1,5)='candy';
select * from stu where substr(name,1,5)='candy';
select * from stu where FORMAT(date,'YYYY-MM-DD')='2010-01-01';
select * from stu where LENGTH(name)=5;
select * from stu where SUBSTRING(name,1)='candy';
select * from stu where SUBSTRING(name,1,5)='candy';
select id from a;
select * from stu where name='candy';
alter table table1 add index (a,b);
alter table table1 add index index1 (a,b);
/*纯数字*/create table `111`( id int );
/*纯数字*/create table "111"( id int );
/*特殊字符*/create table "table#"( id int );
/*特殊字符*/create table `table#`( id int );
/*数字开头*/create table `1tab`( id int );
/*数字开头*/create table "1tab"( id int );
/*下划线开头*/create table "_tab"( id int );
/*下划线开头*/create table `_tab`( id int );
/*带数字*/create table table1( id int );
/*带下划线*/create table table_one( id int );
create table temp( id int, name char(20), CONSTRAINT fff foreign key(id) references outTable(id)  );
create table temp( id int, name char(20), CONSTRAINT FK_PerOrders foreign key(id) references outTable(id)  );
create table mytab (id int, constraint ppp primary key (id)) ;
create table mytab (id int, constraint PK_tab primary key (id)) ;
CREATE TRIGGER TTT_nnn AFTER INSERT ON table1 FOR EACH ROW UPDATE table2 SET ID = 1;
CREATE TRIGGER TRI_nnn AFTER INSERT ON table1 FOR EACH ROW UPDATE table2 SET ID = 1;
select coalesce(null,2,3) from stu;
select * from stu;
select * from stu order by name;
select * from a where 1 = 1;
select * from t1 where a = a;
select * from a where ID = 1;
select a.* from tb a where exists(select 1 from tb where name =a.name);select a from tb where a in(1,2);
select a from tb where a = 1;
select * from stu where id=1;
select id as identity from stu where a=? and b=1;
select 'a' as name from abc;
select encrypt(?, '密钥');
select * from abc where a in ('1','2','3');
select * from abc limit 1;
select * from abc limit 1 offset 1;
select avg(amount) over(partition by user_no  RANGE BETWEEN 1 PRECEDING AND 100 FOLLOWING ) as row_num from order_info;
select * from abc where a='1';
select 'a' as name from b;
select nvl(1,2);
insert into a(a,b,c) values (1,?,3);
update abc set name='123';
select * from dual order by 1;
select * from dual group by 1;
SELECT CAST('1' AS char);
SELECT productline,order_year,order_value,LAG (order_value,1) OVER (PARTITION BY productLine ORDER BY order_year) prev_year_order_value FROM productline_sales;
select upper('asd') from dual;
select * from  asd where name like concat('%','asd','%');
select a from tb where a in(?);
select id as identity from stu where a=? and b=?;
select ? as name from abc;
select encrypt(?, ?);
select * from abc where a in (?,?,?);
select * from abc limit ?;
select * from abc limit ? offset ?;
select avg(amount) over(partition by user_no  RANGE BETWEEN ? PRECEDING AND ? FOLLOWING ) as row_num from order_info;
select * from abc where a=?;
select ? as name from b;
select nvl(?,?);
insert into a(a,b,c) values (?,?,?);
update abc set name=?;
select * from dual order by ?;
select * from dual group by ?;
SELECT CAST(? AS char);
SELECT productline,order_year,order_value,LAG (order_value,?) OVER (PARTITION BY productLine ORDER BY order_year) prev_year_order_value FROM productline_sales;
select upper(name) from dual;
select * from  asd where name like concat('%',?,'%');
select * from  asd where name like concat(?,?,?);
select a from tb where a in(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
select a from tb where a in(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
/*添加列*/alter table stu add column name varchar(12) not null;
/*修改列类型*/alter table t_book modify name varchar(22);
/*修改列名称*/alter table student change column sname stuname varchar(20);
/*添加列*/alter table stu add column name varchar(12) not null  comment '姓名' ;
/*修改列类型*/alter table t_book modify name varchar(22) comment '姓名' ;
/*修改列名称*/alter table student change column sname stuname varchar(20) comment '姓名' ;
alter table stu add column name char(21) not null;
CREATE TABLE student(name char(21));
alter table stu add column name char(20) not null;
CREATE TABLE student(name char(20));
SELECT stuNo,results FROM score WHERE results>(SELECT AVG(results) FROM score);
SELECT stuNo,results,(SELECT AVG(results) FROM score) AS A FROM score;
SELECT stuNo,results FROM score WHERE results BETWEEN (SELECT AVG(results) FROM score WHERE results<=60) AND (SELECT AVG(results) FROM score WHERE results>=80);
select * from a where age = (select aa from tt);
select * from a where age = (18,19);
CREATE TABLE student( id INT PRIMARY KEY AUTO_INCREMENT);
CREATE TABLE student( id INT PRIMARY KEY AUTO_INCREMENT) COMMENT='学生信息';
alter table stu add column name varchar(12)  CHARACTER SET utf8 COLLATE utf8_general_ci not null  comment '姓名' ;
alter table stu add column name varchar(12) ;
create table mytab(id int not null , name timestamp);
create table mytab(id int not null);
update stu,class set age = 12;
DELETE t1 FROM t1 LEFT JOIN T2 ON t1.id=t2.id WHERE t2.id IS NULL;
UPDATE product p INNER JOIN product_price pp ON p.productid= pp.productid SET pp.price = p.price * 0.8;
DELETE t1 FROM t1,t2 WHERE t1.id=t2.id;
DELETE FROM Person p WHERE p.LastName = 'Wilson'
UPDATE Person p SET p.FirstName = 'Fred' WHERE p.LastName = 'Wilson';
SELECT * FROM passwd INTO OUTFILE '/tmp/runoob.txt';
select * from a,a,a;
select * from a a  left join a b on a.name = b.name left join a c on a.name = c.name;
select * from a,a;
select * from a a  left join a c on a.name = c.name;
create table mytab(id int not null , name Blob);
alter table t_book modify name Blob;
alter table members add name Blob;
create table mytab(id int not null , name TEXT);
alter table t_book modify name TEXT;
alter table members add name TEXT;
create table mytab(id int not null);
alter table t_book modify id int;
alter table members add id int;
INSERT INTO table1 select * FROM table2;